{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Deployment Manifest",
  "description": "Schema for Multi-Agent AgenticAI Task Deployment Kit manifests",
  "type": "object",
  "required": ["version", "deployment", "agents"],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+(\\.\\d+)?$",
      "description": "Manifest format version"
    },
    "deployment": {
      "type": "object",
      "required": ["name", "environment"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Deployment name"
        },
        "environment": {
          "type": "string",
          "enum": ["development", "staging", "production"],
          "description": "Target environment"
        },
        "description": {
          "type": "string",
          "maxLength": 500,
          "description": "Deployment description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deployment tags"
        },
        "created_by": {
          "type": "string",
          "description": "Creator identifier"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": ["autonomous", "supervised", "interactive"],
          "default": "supervised",
          "description": "Operating mode"
        },
        "scaling": {
          "type": "object",
          "properties": {
            "auto_scale": {
              "type": "boolean",
              "default": false,
              "description": "Enable automatic scaling"
            },
            "min_agents": {
              "type": "integer",
              "minimum": 1,
              "description": "Minimum agent count"
            },
            "max_agents": {
              "type": "integer",
              "minimum": 1,
              "description": "Maximum agent count"
            },
            "scale_up_threshold": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "CPU threshold for scaling up (%)"
            },
            "scale_down_threshold": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "CPU threshold for scaling down (%)"
            }
          }
        },
        "security": {
          "type": "object",
          "properties": {
            "token_duration": {
              "type": "string",
              "pattern": "^\\d+[smhd]$",
              "default": "24h",
              "description": "Capability token duration"
            },
            "audit_retention": {
              "type": "string",
              "pattern": "^\\d+[smhd]$",
              "default": "30d",
              "description": "Audit log retention period"
            },
            "compliance_monitoring": {
              "type": "boolean",
              "default": true,
              "description": "Enable compliance monitoring"
            }
          }
        },
        "monitoring": {
          "type": "object",
          "properties": {
            "metrics_retention": {
              "type": "string",
              "pattern": "^\\d+[smhd]$",
              "default": "7d",
              "description": "Metrics retention period"
            },
            "alert_retention": {
              "type": "string",
              "pattern": "^\\d+[smhd]$",
              "default": "30d",
              "description": "Alert retention period"
            },
            "health_check_interval": {
              "type": "string",
              "pattern": "^\\d+[smh]$",
              "default": "30s",
              "description": "Health check interval"
            }
          }
        }
      }
    },
    "agents": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/agent"
      },
      "description": "Agent specifications"
    },
    "agent_groups": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/agent_group"
      },
      "description": "Agent group specifications"
    }
  },
  "definitions": {
    "agent": {
      "type": "object",
      "required": ["name", "layer"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "description": "Agent name (alphanumeric, underscore, hyphen only)"
        },
        "layer": {
          "type": "string",
          "enum": ["CECCA", "Board", "Executive", "StackChief", "Specialist", "Micro"],
          "description": "Agent hierarchy layer"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "strategic_planning",
              "system_authority", 
              "cross_organizational_coordination",
              "emergency_decision_making",
              "resource_allocation",
              "policy_enforcement",
              "governance_oversight",
              "compliance_monitoring",
              "risk_assessment",
              "ethics_validation",
              "operational_coordination",
              "task_orchestration",
              "resource_management",
              "performance_monitoring",
              "emergency_response",
              "domain_leadership",
              "subject_matter_expertise",
              "team_coordination",
              "workflow_orchestration",
              "specialization_management",
              "deep_domain_expertise",
              "complex_analysis",
              "system_integration",
              "advanced_processing",
              "decision_support",
              "task_execution",
              "atomic_operations",
              "parallel_processing",
              "rule_based_actions",
              "resource_efficiency"
            ]
          },
          "uniqueItems": true,
          "description": "Agent capabilities"
        },
        "resource_requirements": {
          "$ref": "#/definitions/resource_requirements"
        },
        "escalation_path": {
          "type": "string",
          "description": "Parent agent identifier for escalation"
        },
        "subordinates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Subordinate agent identifiers"
        },
        "configuration": {
          "type": "object",
          "properties": {
            "startup_delay": {
              "type": "string",
              "pattern": "^\\d+[smh]$",
              "description": "Startup delay"
            },
            "health_check_timeout": {
              "type": "string",
              "pattern": "^\\d+[smh]$",
              "description": "Health check timeout"
            },
            "task_timeout": {
              "type": "string",
              "pattern": "^\\d+[smh]$",
              "description": "Task execution timeout"
            },
            "retry_attempts": {
              "type": "integer",
              "minimum": 0,
              "maximum": 10,
              "description": "Task retry attempts"
            }
          }
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata for the agent"
        }
      }
    },
    "agent_group": {
      "type": "object",
      "required": ["name", "template", "count"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Agent group name"
        },
        "template": {
          "$ref": "#/definitions/agent"
        },
        "count": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "description": "Number of agents to create from template"
        },
        "naming_pattern": {
          "type": "string",
          "default": "{name}-{index:04d}",
          "description": "Naming pattern for generated agents"
        }
      }
    },
    "resource_requirements": {
      "type": "object",
      "properties": {
        "cpu_cores": {
          "type": "number",
          "minimum": 0.1,
          "maximum": 64.0,
          "description": "CPU cores required"
        },
        "memory_mb": {
          "type": "integer",
          "minimum": 64,
          "maximum": 65536,
          "description": "Memory in megabytes"
        },
        "storage_mb": {
          "type": "integer",
          "minimum": 100,
          "maximum": 1048576,
          "description": "Storage in megabytes"
        },
        "network_bandwidth_mbps": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000,
          "description": "Network bandwidth in Mbps"
        },
        "gpu_memory_mb": {
          "type": "integer",
          "minimum": 0,
          "maximum": 24576,
          "description": "GPU memory in megabytes (optional)"
        }
      }
    }
  }
}